/*! For license information please see src_components_shared_components_EmojiTextArea_js.js.LICENSE.txt */
(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([["src_components_shared_components_EmojiTextArea_js"],{"./src/components/shared/components/EmojiTextArea.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var emoji_mart_css_emoji_mart_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! emoji-mart/css/emoji-mart.css */ "./node_modules/emoji-mart/css/emoji-mart.css");\n/* harmony import */ var emoji_mart_css_emoji_mart_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(emoji_mart_css_emoji_mart_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var emoji_mart__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! emoji-mart */ "./node_modules/emoji-mart/dist-es/index.js");\n/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mui/material */ "./node_modules/@mui/material/Grid/Grid.js");\n/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @mui/material */ "./node_modules/@mui/material/TextField/TextField.js");\n/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @mui/material */ "./node_modules/@mui/material/IconButton/IconButton.js");\n/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mui/material */ "./node_modules/@mui/material/FormHelperText/FormHelperText.js");\n/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @mui/material */ "./node_modules/@mui/material/Collapse/Collapse.js");\n/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @mui/material */ "./node_modules/@mui/material/Box/Box.js");\n/* harmony import */ var _mui_styles_withStyles__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @mui/styles/withStyles */ "./node_modules/@mui/styles/withStyles/withStyles.js");\n/* harmony import */ var _mui_icons_material_EmojiEmotions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @mui/icons-material/EmojiEmotions */ "./node_modules/@mui/icons-material/EmojiEmotions.js");\n/* harmony import */ var _mui_icons_material_Close__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @mui/icons-material/Close */ "./node_modules/@mui/icons-material/Close.js");\n/* harmony import */ var _functions_countWithEmojis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../functions/countWithEmojis */ "./src/components/shared/functions/countWithEmojis.js");\n\n\n\n\n\n\n\n\n\nconst styles = theme => ({\n  "@global": {\n    ".emoji-mart-category-label": theme.typography.body1,\n    ".emoji-mart-bar": {\n      display: "none !important"\n    },\n    ".emoji-mart-search input": {\n      ...theme.typography.body1,\n      ...theme.border\n    },\n    ".emoji-mart-search": {\n      marginTop: `${theme.spacing(1)} !important`,\n      paddingRight: `${theme.spacing(1)} !important`,\n      paddingLeft: `${theme.spacing(1)} !important`,\n      paddingBottom: `${theme.spacing(1)} !important`\n    },\n    ".emoji-mart-search-icon": {\n      top: "5px !important",\n      right: "14px !important",\n      fontSize: 20\n    },\n    ".emoji-mart-scroll": {\n      height: 240\n    },\n    ".emoji-mart": {\n      ...theme.border\n    }\n  },\n  floatButtonWrapper: {\n    position: "absolute",\n    bottom: 12,\n    right: 12\n  },\n  floatButtonSVG: {\n    color: theme.palette.primary.light\n  },\n  relative: {\n    position: "relative"\n  }\n});\n\n/**\n * Emojis whose unified is greater than 5 sometimes\n * are not displayed correcty in the browser.\n * We won\'t display them.\n */\nconst emojisToShowFilter = emoji => {\n  if (emoji.unified.length > 5) {\n    return false;\n  }\n  return true;\n};\nfunction EmojiTextarea(props) {\n  const {\n    theme,\n    classes,\n    rightContent,\n    placeholder,\n    maxCharacters,\n    emojiSet,\n    inputClassName,\n    onChange\n  } = props;\n  const [open, setOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("");\n  const [characters, setCharacters] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n  const onSelectEmoji = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(emoji => {\n    let _characters;\n    let _value = value + emoji.native;\n    if (maxCharacters) {\n      _characters = (0,_functions_countWithEmojis__WEBPACK_IMPORTED_MODULE_3__["default"])(_value);\n      if (_characters > maxCharacters) {\n        return;\n      }\n    }\n    if (onChange) {\n      onChange(_value, _characters);\n    }\n    setValue(_value);\n    setCharacters(_characters);\n  }, [value, setValue, setCharacters, maxCharacters, onChange]);\n  const handleTextFieldChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(event => {\n    const {\n      target\n    } = event;\n    const {\n      value\n    } = target;\n    let characters;\n    if (maxCharacters) {\n      characters = (0,_functions_countWithEmojis__WEBPACK_IMPORTED_MODULE_3__["default"])(value);\n      if (characters > maxCharacters) {\n        return;\n      }\n    }\n    if (onChange) {\n      onChange(value, characters);\n    }\n    setValue(value);\n    setCharacters(characters);\n  }, [maxCharacters, onChange, setValue, setCharacters]);\n  const toggleOpen = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    setOpen(!open);\n  }, [open, setOpen]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__["default"], {\n    spacing: 0,\n    container: true\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__["default"], {\n    item: true,\n    xs: rightContent ? 8 : 12,\n    sm: rightContent ? 9 : 12,\n    lg: rightContent ? 10 : 12,\n    className: classes.relative\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_5__["default"], {\n    fullWidth: true,\n    multiline: true,\n    variant: "outlined",\n    rows: 6,\n    onInput: handleTextFieldChange,\n    value: value,\n    placeholder: placeholder,\n    InputProps: {\n      classes: {\n        notchedOutline: inputClassName ? inputClassName : null\n      }\n    }\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", {\n    className: classes.floatButtonWrapper\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_6__["default"], {\n    onClick: toggleOpen,\n    size: "large"\n  }, open ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Close__WEBPACK_IMPORTED_MODULE_7__["default"], {\n    color: "primary"\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_EmojiEmotions__WEBPACK_IMPORTED_MODULE_8__["default"], {\n    color: "primary"\n  })))), rightContent && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_4__["default"], {\n    item: true,\n    xs: 4,\n    sm: 3,\n    lg: 2\n  }, rightContent)), maxCharacters && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_9__["default"], {\n    error: characters >= maxCharacters\n  }, `${characters}/${maxCharacters} characters`), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_10__["default"], {\n    in: open\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_material__WEBPACK_IMPORTED_MODULE_11__["default"], {\n    mt: 1\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(emoji_mart__WEBPACK_IMPORTED_MODULE_2__.Picker, {\n    set: emojiSet,\n    color: theme.palette.primary.main,\n    style: {\n      width: "100%"\n    },\n    onSelect: onSelectEmoji,\n    emojisToShowFilter: emojisToShowFilter\n  }))));\n}\nEmojiTextarea.propTypes = {\n  theme: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().object).isRequired,\n  classes: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().object).isRequired,\n  emojiSet: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string).isRequired,\n  rightContent: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().element),\n  placeholder: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string),\n  maxCharacters: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().number),\n  onChange: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().func),\n  inputClassName: (prop_types__WEBPACK_IMPORTED_MODULE_12___default().string)\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_mui_styles_withStyles__WEBPACK_IMPORTED_MODULE_13__["default"])(styles, {\n  withTheme: true\n})(EmojiTextarea));\n\n//# sourceURL=webpack://frontend/./src/components/shared/components/EmojiTextArea.js?')},"./src/components/shared/functions/countWithEmojis.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _toArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toArray */ "./src/components/shared/functions/toArray.js");\n/* harmony import */ var _toArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_toArray__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/**\n * Counts the characters in a string and counts emojis correctly.\n *\n * @param {string} str The string to count characters from.\n * @return {number} The number of characters in the string.\n */\nfunction countWithEmojis(str) {\n  return _toArray__WEBPACK_IMPORTED_MODULE_0___default()(str).length;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (countWithEmojis);\n\n//# sourceURL=webpack://frontend/./src/components/shared/functions/countWithEmojis.js?')},"./src/components/shared/functions/toArray.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('/* eslint-disable */\n\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports="npm" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nconst argsTag = "[object Arguments]";\nconst funcTag = "[object Function]";\nconst genTag = "[object GeneratorFunction]";\nconst mapTag = "[object Map]";\nconst objectTag = "[object Object]";\nconst promiseTag = "[object Promise]";\nconst setTag = "[object Set]";\nconst stringTag = "[object String]";\nconst weakMapTag = "[object WeakMap]";\nconst dataViewTag = "[object DataView]";\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nconst reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nconst reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nconst reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to compose unicode character classes. */\nconst rsAstralRange = "\\\\ud800-\\\\udfff";\nconst rsComboMarksRange = "\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23";\nconst rsComboSymbolsRange = "\\\\u20d0-\\\\u20f0";\nconst rsVarRange = "\\\\ufe0e\\\\ufe0f";\n\n/** Used to compose unicode capture groups. */\nconst rsAstral = `[${rsAstralRange}]`;\nconst rsCombo = `[${rsComboMarksRange}${rsComboSymbolsRange}]`;\nconst rsFitz = "\\\\ud83c[\\\\udffb-\\\\udfff]";\nconst rsModifier = `(?:${rsCombo}|${rsFitz})`;\nconst rsNonAstral = `[^${rsAstralRange}]`;\nconst rsRegional = "(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}";\nconst rsSurrPair = "[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]";\nconst rsZWJ = "\\\\u200d";\n\n/** Used to compose unicode regexes. */\nconst reOptMod = `${rsModifier}?`;\nconst rsOptVar = `[${rsVarRange}]?`;\nconst rsOptJoin = `(?:${rsZWJ}(?:${[rsNonAstral, rsRegional, rsSurrPair].join("|")})${rsOptVar}${reOptMod})*`;\nconst rsSeq = rsOptVar + reOptMod + rsOptJoin;\nconst rsSymbol = `(?:${[`${rsNonAstral + rsCombo}?`, rsCombo, rsRegional, rsSurrPair, rsAstral].join("|")})`;\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nconst reUnicode = RegExp(`${rsFitz}(?=${rsFitz})|${rsSymbol}${rsSeq}`, "g");\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nconst reHasUnicode = RegExp(`[${rsZWJ}${rsAstralRange}${rsComboMarksRange}${rsComboSymbolsRange}${rsVarRange}]`);\n\n/** Detect free variable `global` from Node.js. */\nconst freeGlobal = typeof __webpack_require__.g === "object" && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || Function("return this")();\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  let index = -1;\n  const length = array ? array.length : 0;\n  const result = Array(length);\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split("");\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  let index = -1;\n  const result = Array(n);\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, key => object[key]);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  let result = false;\n  if (value !== null && typeof value.toString !== "function") {\n    try {\n      result = !!`${value}`;\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `iterator` to an array.\n *\n * @private\n * @param {Object} iterator The iterator to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction iteratorToArray(iterator) {\n  let data;\n  const result = [];\n  while (!(data = iterator.next()).done) {\n    result.push(data.value);\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  let index = -1;\n  const result = Array(map.size);\n  map.forEach((value, key) => {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  let index = -1;\n  const result = Array(set.size);\n  set.forEach(value => {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);\n}\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/** Used for built-in method references. */\nconst funcProto = Function.prototype;\nconst objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nconst coreJsData = root["__core-js_shared__"];\n\n/** Used to detect methods masquerading as native. */\nconst maskSrcKey = function () {\n  const uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");\n  return uid ? `Symbol(src)_1.${uid}` : "";\n}();\n\n/** Used to resolve the decompiled source of functions. */\nconst funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nconst hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nconst objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nconst reIsNative = RegExp(`^${funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\\\$&").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, "$1.*?")}$`);\n\n/** Built-in value references. */\nconst Symbol = root.Symbol;\nconst iteratorSymbol = Symbol ? Symbol.iterator : undefined;\nconst propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nconst nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nconst DataView = getNative(root, "DataView");\nconst Map = getNative(root, "Map");\nconst Promise = getNative(root, "Promise");\nconst Set = getNative(root, "Set");\nconst WeakMap = getNative(root, "WeakMap");\n\n/** Used to detect maps, sets, and weakmaps. */\nconst dataViewCtorString = toSource(DataView);\nconst mapCtorString = toSource(Map);\nconst promiseCtorString = toSource(Promise);\nconst setCtorString = toSource(Set);\nconst weakMapCtorString = toSource(WeakMap);\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  const result = isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];\n  const length = result.length;\n  const skipIndexes = !!length;\n  for (const key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key === "length" || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  const pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn\'t treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  const result = [];\n  for (const key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key !== "constructor") {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  let index = -1;\n  const length = source.length;\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it\'s native, else `undefined`.\n */\nfunction getNative(object, key) {\n  const value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nlet getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) !== dataViewTag || Map && getTag(new Map()) !== mapTag || Promise && getTag(Promise.resolve()) !== promiseTag || Set && getTag(new Set()) !== setTag || WeakMap && getTag(new WeakMap()) !== weakMapTag) {\n  getTag = function (value) {\n    const result = objectToString.call(value);\n    const Ctor = result === objectTag ? value.constructor : undefined;\n    const ctorString = Ctor ? toSource(Ctor) : undefined;\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n        case mapCtorString:\n          return mapTag;\n        case promiseCtorString:\n          return promiseTag;\n        case setCtorString:\n          return setTag;\n        case weakMapCtorString:\n          return weakMapTag;\n        default:\n          return;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (typeof value === "number" || reIsUint.test(value)) && value > -1 && value % 1 === 0 && value < length;\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  const Ctor = value && value.constructor;\n  const proto = typeof Ctor === "function" && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func !== null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return `${func}`;\n    } catch (e) {}\n  }\n  return "";\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, "callee") && (!propertyIsEnumerable.call(value, "callee") || objectToString.call(value) === argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray(\'abc\');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it\'s\n * not a function and has a `value.length` that\'s an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike(\'abc\');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject(\'abc\');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns \'object\' for typed array and other constructors.\n  const tag = isObject(value) ? objectToString.call(value) : "";\n  return tag === funcTag || tag === genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength(\'3\');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value === "number" && value > -1 && value % 1 === 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String(\'\')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  const type = typeof value;\n  return !!value && (type === "object" || type === "function");\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it\'s not `null`\n * and has a `typeof` result of "object".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value === "object";\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString(\'abc\');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value === "string" || !isArray(value) && isObjectLike(value) && objectToString.call(value) === stringTag;\n}\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ \'a\': 1, \'b\': 2 });\n * // => [1, 2]\n *\n * _.toArray(\'abc\');\n * // => [\'a\', \'b\', \'c\']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n  if (isArrayLike(value)) {\n    return isString(value) ? stringToArray(value) : copyArray(value);\n  }\n  if (iteratorSymbol && value[iteratorSymbol]) {\n    return iteratorToArray(value[iteratorSymbol]());\n  }\n  const tag = getTag(value);\n  const func = tag === mapTag ? mapToArray : tag === setTag ? setToArray : values;\n  return func(value);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => [\'a\', \'b\'] (iteration order is not guaranteed)\n *\n * _.keys(\'hi\');\n * // => [\'0\', \'1\']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values(\'hi\');\n * // => [\'h\', \'i\']\n */\nfunction values(object) {\n  return object ? baseValues(object, keys(object)) : [];\n}\nmodule.exports = toArray;\n\n//# sourceURL=webpack://frontend/./src/components/shared/functions/toArray.js?')}}]);